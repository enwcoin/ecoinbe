name: execute tests
run-name: tests execution
on:
  pull_request:
    branches: [master]
jobs:
  echo_header:
    runs-on: ubuntu-latest
    steps:
      - name: Echo Header
        run: echo "Running Tests"

  run_tests:
    needs: echo_header
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Virtualenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --dev

      - name: Setup Variables Env
        run: echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env

      - name: Run migrations
        run: pipenv run python manage.py migrate

      - name: Run tests
        run: pipenv run python manage.py test tests

  build:
    needs: run_tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghrc.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ghrc.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }})" >> $GITHUB_ENV

      - name: Build and push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.IMAGE_URL }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Preset Image Name
        run: echo "IMAGE_URL=$(echo ghrc.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:$(echo ${{ github.sha }})" >> $GITHUB_ENV

      - name: Deploy Image to Caprover
        uses: caprover/deploy-from-github@v1.1.2
        with:
          server: ${{ secrets.CAPROVER_SERVER }}
          app: ${{ secrets.APP_NAME }}
          token: ${{ secrets.APP_TOKEN }}
          image: ${{ env.IMAGE_URL }}
